Objective:- Assignments will help trainees to understand the basics of unix command and how to explore and use it.

DO NOT copy paste commands from internet, you can take help of the Unix in-built command manual.

Be Honest to yourself!

Important command and option to learn unix commands:-
man Command
Example:-
man ls

--help Option
Example:-
ls --help

NOTE:- Always use "man" command before using any unix commands and read about it and its options and how to use it.

Assignments:-

List the contents of a directory and their attributes
$ ls

Long list the content with file, directory ownership, permissions,sizes, etc…
$ ls -l

Display the size of the file in human readable format
$ ls -lh

Show all files and folders including hidden one
$ ls -a

list directories recursively
$ ls -R

Sort the files by size with largest at the top
$ ls -lt

Sort the files by last time modified displaying the newest first.
$ ls -t

Diplay the location of a program/command, where it is installed.
$ pwd
use command 'whereis' then command/program to be searched. Ex:- $ whereis ls, will display the location of command ls where it is stored.

Which command is used to switch directory from one to another
$ cd

List all the environment variables set for the current shell environment
$ env

Did you notice something in the output of "env" command?
prints a list of the current environment variables

Which command is used to print the text or any variables value in the Console/Terminal?
$ echo "[string and variable]"

Print the value of the env variable "PATH" on the console
$ echo $PATH

Is linux a case-sensitive operating system?
yes

Is, "Ls" same as "ls"?
no

Display your currently logged in user
$ whoami

how do you change the currrently logged in user to another user?
$ su -l [other_user]

Which command is used to leave a shell environment that you are currently logged in to?
$ exit

How do you reboot the system?
By using command lines
1. Sign in or "su"/"sudo" to the "root" account.
2. To reboot then type "sudo reboot".
3. Wait for few minutes and the system will reboot itself.

How do you shutdown the system?
$ sudo  shutdown
The shutdown process will start after few minutes
or
$ sudo shutdown 10
The above command will schedule system shutdown at 10 A.M
or
$ sudo shutdown +20
The above command will schedule system shutdown in 20 minutes from now

Display all the major running processes in the system
$ ps -A

Understand the output of command used in above question of displaying processes, explain the meaning of each column and what data it displays?
Using command ps along with a, u and x, displays all displays all processes running for all users on system, along with information like username of the process owner, CPU load, starting time of process, the command that initiate that process 
$ ps -aux

Display the name of the system kernel
$ uname-s

display the kernel release number
$ username -r --kernel-release

display the machine type of the current kernel
$ uname -m --machine

Display the name of the operating system that the kernel is running on
$ uname -o --operating-system

Display all info that uname command can show.
$ uname -a

Display the name of directory that you are currently pointing to
$ pwd

change the current directory to another directory that you have in your system.
$ cd

Go up one directory
$ cd ..

Return to last directory
$ cd -

change the current directory to home(logged in user's) directory
$ cd ~

How to check all the command used from the prompt (Command History)
$ history

In which file the history of commands are stored in?
.bash_history

How many lines of history does the system keep and from where you can change it?
ans: Command History is preserved in limited by the HISTSIZE setting. Most accounts are set up to records 100, 500 or 1,000 commands, and if the older command are overwritten by newer ones when that limit is exceeds.

How can you modify bash's history behaviour
ans: by using PROMPT_COMMAND.

Display all the commands entered so far, now, try to run a particular command from the history list without typing that command.

NOTE:- TAB key is your friend when it comes to command completion and having long file and directory names autocompleted at the bash prompt for you. JUST BE LAZY AND USE TAB KEY FOR AUTO COMPLETION ;-)
ans: by using history command, we can isplay all the commands so far and for future process we can use tab or search by using upward key

What are the different types of shell and where are they used and how do we use them?
ans: 
Shell is a program which provides the interface between the user and an operating system. Kernal controls all essential computer operation, and provides the restriction to hardware access, coordinate all executing utilities, and manages resources between process.
TYPES od Shell:
1. C Shell: demoted as 'csh'. 
2. Bourne Shell: denoted as 'sh'
3. Korn Shell: denoted as 'ksh'
4. GNU Bourne-Again Shell: denoted as 'bash'

What is the difference between login shell and non-login shell?
ans:
A Login shell is started after a successful login, using /bin/login, by reading the /etc/passwd file. Login shell is the first process that executes under our user ID when we log in to a session. The login process tells the shell to behave as a login shell with a convention: passing argument 0, which is normally the name of the shell executable, with a “-” character prepended. For example, for Bash shell it will be -bash.
A Non login shell is started by a program without a login. In this case, the program just passes the name of the shell executable. For example, for a Bash shell it will be simply bash

How do we start login shell and non-login shell?
ans:
Login Shell # su - | # su -l | # su --login | # su USERNAME - | # su -l USERNAME | # su --login USERNAME | # sudo -i
Non Login Shell # su | # su USERNAME 

What happens when you start a login shell (which files are read and used and Why)?
ans:
Login process calls /etc/profile
/etc/profile calls the scripts in /etc/profile.d/
Login process calls ~/.bash_profile
~/.bash_profile calls ~/.bashrc
~/.bashrc calls /etc/bashrc

What happens when you start a non-login shell (Which files are read and used and Why)?
ans:
Non-login process(shell) calls ~/.bashrc
~/.bashrc calls /etc/bashrc
/etc/bashrc calls the scripts in /etc/profile.d/

What are Shell Configuration Files, why do we need it?
ans: This file contains individual specific configurations. This file is read at login and also each time a new Bash shell is started. Ideally, this is where you should place any aliases. This file is used to customize key bindings/key strokes.

Explain the Order of file usage from the system/user's home directory when user logs in to the System.
ans: ls -ltu /path/to/file

What are Shell Variables, list major shell variables and what do they represent?
ans: A shell variable is a special variable that is set by the shell and is required by the shell in order to function correctly.
 Some of these variables are environment variables whereas others are local variables.

How we see all our env variables?
ans: get-childitem env:*

How we see all env variables in alphabical order?
ans: get-childitem env:* |
sort-object Key |
more

What Format does the env var and its values are stored?
ans: An environment variable is a variable whose value is set outside the program,typically through functionality built into the operating system or microservice.
An environment variable is made up of a name/value pair, and any number may be created and available for reference at a point in time.

How do you create your own varible?
ans: variable_name=variable_value

How do you start a new bash shell?
ans: Set the environmental variable pointing to git location C:\Program Files\Git . 
Now go to your location in windows where you wanna open git bash. Press alt + d and type get-bash

Difference between Local/Shell variables to Global Variable
ans: Local variable is declared inside a function whereas Global variable is declared outside the function.
Local variables are created when the function has started execution and is lost when the function terminates, on the other hand, Global variable is created as execution starts and is lost when the program ends.

Making a variable accessible from other the shell in the system.
ans: If you want to make a variable available to every new process, then you can put it in /etc/environment (requires root privileges) or ~/. profile .

Show the real life use case of exporting a variable

Convert the above script file into a command, The file should run with "myappp" instead of "myapp.sh"

What is Globbing? Explain in depth with examples?
Globbing is a bash shell feature that is used for matching or expanding specific types of patterns. It is mainly used to match filenames or searching for content in a file. Globbing used wildcard characters to create the pattern. Examples:-
1. questionmark-(?) is used to match any single character or multiple. ex:- $ ls -l ??????.txt , this command will search those files whose names are 6 characters long and unknown.
2. asteric-(*) is used to match zero or more characters. If we have less information to search any file or information then you can use '*' in globbing pattern. Ex:- $ ls -l c*.*, this command will search the file which has starting charecter 'c' with all file extention.
3. square brackets- ([]) is used to match the charecter from the range. Ex:- 
	i. all uppercase alphabets are defined by range as, [A-Z].
       ii. all lowercase alphabets are defined by range as, [a-z].
      iii. all numerical digits are defined by the range as, [0-9].
       iv. all uppercase and lower alphabets are defined by range as, [a-zA-Z].
        
List all entries with extension ".sh"
$ ls -l *.sh

List all entries with numbers in it.
$ ls -l [0-9]*

List all entries that starts with a character and ends with a number
$ ls [{a-z},{A-Z}]*[0-9]

List all entries that name length more than 5 characters
$ ?????*

What is Quoting? and Why do we need it?
ans: You can enable or disable the meaning of a special character by enclosing them in single quotes.
 
This is also useful to suppress warnings and error messages while writing the shell scripts.

Write few(minimum 3) unique examples that shows, how a particular problem is solved using Quoting.
ans: 
1)echo Hello; Word (This will print hello only); Quoting solution - echo Hello\; Word
2)echo "I have \$1200"
3)DATE=`date`  (It shows data available)    --    echo "Current Date: $DATE"

How do you find a particular files/directories based on a particular search criteria?
HINT:- look for commands -> locate, find and whereis
ans:
1)find /home/linuxize -type f -iname document.pdf
2)locate -i -e *text.txt*
3)whereis filename

Write major difference between locate, find and whereis?
ans: Big difference is that find searches real files recursively down a given directory, while locate searches a database without requiring specific directory.
Thus, if you have saved a file before updating database, find will find it , but locate won't.
As for whereis,it searches only inside those directories that are mentioned in your PATH variable and only those with executable permissions.

How Globbing is different from locate, find and whereis?
ans: File globbing is a feature provided by the UNIX/Linux shell to represent multiple filenames by using special characters called wildcards with a single file name.
A wildcard is essentially a symbol which may be used to substitute for one or more characters.

Explain the Linux File System.
ans: A Linux file system is a structured collection of files on a disk drive or a partition.The general-purpose computer system needs to store data systematically
 so that we can easily access the files in less time. It stores the data on hard disks (HDD) or some equivalent storage type.

Explain absolute and Relative Paths
ans: Absolute paths:An absolute path is defined as specifying the location of a file or directory from the root directory(/).
In other words,we can say that an absolute path is a complete path from start of actual file system from / directory.

Relative paths:Relative path is defined as the path related to the present working directly(pwd).
It starts at your current directory and never starts with a / .

What are the different ways of creating a File in linux System? Write an example of each and the difference between them.
ans: By using touch,cat,printf commands or using right angle bracket, we can create a file in linux system.
Examples:
touch test.txt
cat > test.txt
printf ‘First line of text\n’ test.txt
> test.txt

cat command : It is used to create the file with content.
touch command: It is used to create a file without any content.The file created using touch command is empty.

Also by using vim command in vi text editor and nano command in Nano text editor,we can create file.

In how many ways we can delete the files from linux system? write an example of each and teh difference between them.
ans:
Shred – Overwrite a File to Hide Content--  shred -zvu -n 10 notes.list
-z – adds a final overwrite with zeros to hide shredding
-v – enables display of operation progress
-u – truncates and removes file after overwriting
-n – specifies number of times to overwrite file content (the default is 3)

Wipe – Securely Erase Files in Linux--  wipe -rfi private/*
-r – tells wipe to recurse into subdirectories
-f – enables forced deletion and disable confirmation query
-i – shows progress of deletion process


Secure-deletetion Toolkit for Linux--   srm -vz private/*
-v – enables verbose mode
-z – wipes the last write with zeros instead of random data

Also, sswap – Secure Swap Wiper.
sdmem – Secure Memory Wiper.
with these commands, we can delete files.

Archiving files using linux command, write a command to archive set of files from linux commands.
ans: tar -cvf name.tar /path/to/file1 /path/to/file2 /path/to/file3

Extract the archived files from the above step.
ans: tar –xvf name.tar